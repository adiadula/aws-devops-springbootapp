version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 709943586674.dkr.ecr.us-east-1.amazonaws.com
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')

  build:
    commands:
      - echo Build started on $(date)
      - echo Building the JAR file...
      - mvn clean install
      - echo Building the Docker image...
      - docker build -t 709943586674.dkr.ecr.us-east-1.amazonaws.com/my_devops_project_repo_springbootapp:latest .
      - docker tag 709943586674.dkr.ecr.us-east-1.amazonaws.com/my_devops_project_repo_springbootapp:latest 709943586674.dkr.ecr.us-east-1.amazonaws.com/my_devops_project_repo_springbootapp:$IMAGE_TAG

  post_build:
    commands:
      - echo Build completed on $(date)
      - echo Pushing the Docker image to ECR...
      - docker push 709943586674.dkr.ecr.us-east-1.amazonaws.com/my_devops_project_repo_springbootapp:latest
      - docker push 709943586674.dkr.ecr.us-east-1.amazonaws.com/my_devops_project_repo_springbootapp:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"spring-demo-ecr","imageUri":"%s"}]' 709943586674.dkr.ecr.us-east-1.amazonaws.com/my_devops_project_repo_springbootapp:$IMAGE_TAG > imagedefinitions.json
      - echo Displaying imagedefinitions.json content
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
    - target/springboot-aws-deploy.jar
  discard-paths: yes
